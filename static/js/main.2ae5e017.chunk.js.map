{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["SearchBox","_ref","searchChange","react_default","a","createElement","className","type","name","id","placeholder","onChange","Card","email","src","concat","alt","CardList","kitties","map","user","components_Card","key","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","errorInfo","setState","Component","App","onRequestKitties","_this$props","searchField","onSearchChange","isPending","filteredKitties","filter","kitty","toLowerCase","includes","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","connect","searchKitties","requestKitties","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","Boolean","window","location","hostname","match","initialStateSearch","initialStateKitties","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4RAiBeA,EAfG,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,aACpB,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,SACCC,UAAU,mCACVC,KAAK,SACLC,KAAK,IACLC,GAAG,aACHC,YAAa,iBACbC,SAAUT,MCGCU,EAZF,SAAAX,GAA2B,IAAvBQ,EAAuBR,EAAvBQ,GAAID,EAAmBP,EAAnBO,KAAMK,EAAaZ,EAAbY,MAC1B,OACCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDACdH,EAAAC,EAAAC,cAAA,OAAKS,IAAG,wBAAAC,OAA0BN,EAA1B,0BAAsDO,IAAI,eAClEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACdH,EAAAC,EAAAC,cAAA,UAAKG,GACLL,EAAAC,EAAAC,cAAA,SAAIQ,MCoBOI,EAzBE,SAAAhB,GAAiB,IAAdiB,EAAcjB,EAAdiB,QAKnB,OACCf,EAAAC,EAAAC,cAAA,WAEEa,EAAQC,IACP,SAAEC,GACD,OACCjB,EAAAC,EAAAC,cAACgB,EAAD,CACCC,IAAKF,EAAKX,GACVA,GAAIW,EAAKX,GACTD,KAAMY,EAAKZ,KACXK,MAAOO,EAAKP,YCRLU,EARA,SAAEC,GAChB,OACErB,EAAAC,EAAAC,cAAA,OAAKoB,MAAQ,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACpEJ,EAAMK,WCiBGC,cAnBd,SAAAA,EAAaN,GAAQ,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACpBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAOV,KACFc,MAAQ,CACZC,UAAU,GAHSR,iFAOFS,EAAOC,GACzBP,KAAKQ,SAAU,CAAEH,UAAU,qCAI3B,OAAKL,KAAKI,MAAMC,SACRpC,EAAAC,EAAAC,cAAA,8CAED6B,KAAKV,MAAMK,gBAhBOc,aC8BrBC,qMAoBJV,KAAKV,MAAMqB,oDASH,IAAAC,EAEoDZ,KAAKV,MAAzDuB,EAFAD,EAEAC,YAAaC,EAFbF,EAEaE,eAAgB9B,EAF7B4B,EAE6B5B,QAAS+B,EAFtCH,EAEsCG,UACxCC,EAAkBhC,EAAQiC,OAAQ,SAAAC,GACvC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAUP,EAAYM,iBAEvD,OAAOJ,EACN9C,EAAAC,EAAAC,cAAA,MAAIC,UAAW,MAAf,cAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,MACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAW,MAAf,iBACAH,EAAAC,EAAAC,cAACkD,EAAD,CAAWrD,aAAe8C,IAC1B7C,EAAAC,EAAAC,cAACmD,EAAD,KACCrD,EAAAC,EAAAC,cAACoD,EAAD,KACCtD,EAAAC,EAAAC,cAACqD,EAAD,CAAUxC,QAAUgC,cA3CRP,cAoDHgB,cApES,SAAArB,GACvB,MAAO,CACNS,YAAaT,EAAMsB,cAAcb,YACjC7B,QAASoB,EAAMuB,eAAe3C,QAC9B+B,UAAWX,EAAMuB,eAAeZ,UAChCT,MAAOF,EAAMuB,eAAerB,QAIH,SAAEsB,GAC5B,MAAO,CACNd,eAAgB,SAAEe,GAAF,OAAaD,ECpBY,CAC1CvD,KCRkC,sBDSlCyD,QDkBwDD,EAAME,OAAOC,SACpErB,iBAAkB,kBAAMiB,EChBU,SAAEA,GACrCA,EAAU,CAAEvD,KCX0B,4BDYtC4D,MAAO,8CACLC,KAAM,SAAAC,GAAQ,OAAIA,EAASC,SAC3BF,KAAM,SAAAG,GAAI,OAAIT,EAAU,CAAEvD,KCbU,0BDaqByD,QAASO,MAClEC,MAAO,SAAAhC,GAAK,OAAIsB,EAAU,CAAEvD,KCbO,yBDauByD,QAASxB,WDmEvDmB,CAAgDf,GGxE3C6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXN,IAAMC,EAAqB,CAC1B/B,YAAa,IAYRgC,EAAsB,CAC3B9B,WAAW,EACX/B,QAAS,GACTsB,MAAO,ICXFwC,SAASC,0BAETC,EAAcC,YAAiB,CAAEvB,cDHV,WAA+C,IAA7CtB,EAA6C8C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArCN,EAAoBS,EAAiBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAR,GACnE,OAASG,EAAOhF,MACf,IFbiC,sBEchC,OAAOyB,OAAOwD,OAAQ,GAAIlD,EAAO,CAAES,YAAawC,EAAOvB,UACxD,QACC,OAAO1B,ICF4CuB,eDYvB,WAAgD,IAA9CvB,EAA8C8C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtCL,EAAqBQ,EAAiBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAR,GACtE,OAASG,EAAOhF,MACf,IF1BqC,0BE2BpC,OAAOyB,OAAOwD,OAAQ,GAAIlD,EAAO,CAAEW,WAAW,IAC/C,IF3BqC,0BE4BpC,OAAOjB,OAAOwD,OAAQ,GAAIlD,EAAO,CAAEpB,QAASqE,EAAOvB,QAASf,WAAW,IACxE,IF5BoC,yBE6BnC,OAAOjB,OAAOwD,OAAQ,GAAIlD,EAAO,CAAEE,MAAO+C,EAAOvB,QAASf,WAAW,IACtE,QACC,OAAOX,MCpBJmD,EAAQC,YAAaR,EAAaS,YAAiBC,IAAiBZ,IAE1Ea,IAASC,OACP3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAUN,MAAQA,GACjBtF,EAAAC,EAAAC,cAAC2F,EAAD,OACYC,SAASC,eAAe,SF6GjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,KAAK,SAAAkC,GACjCA,EAAaC","file":"static/js/main.2ae5e017.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n\treturn (\n\t\t<div className=\"pa2\">\n\t\t\t<input\n\t\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\n\t\t\t\ttype=\"search\"\n\t\t\t\tname=\"s\"\n\t\t\t\tid=\"search-box\"\n\t\t\t\tplaceholder={'search kitties'}\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Card = ( { id, name, email } ) => {\n\treturn (\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow shadow-5\">\n\t\t\t<img src={`https://robohash.org/${id}?size=200x200&set=set4`} alt=\"kitty face\" />\n\t\t\t<div className=\"\">\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from \"./Card\";\n\nconst CardList = ({ kitties }) => {\n\t/* Error boundry test\n\tif (true) {\n\t\tthrow new Error('NOOOOOOooo!');\n\t}*/\n\treturn(\n\t\t<div>\n\t\t\t{\n\t\t\t\tkitties.map(\n\t\t\t\t\t( user ) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={user.id}\n\t\t\t\t\t\t\t\tid={user.id}\n\t\t\t\t\t\t\t\tname={user.name}\n\t\t\t\t\t\t\t\temail={user.email}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst Scroll = ( props ) => {\n\treturn (\n\t\t\t<div style={ { overflowY: 'scroll', border: '3px solid black', height: '550px' } }>\n\t\t\t\t{ props.children }\n\t\t\t</div>\n\t);\n};\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch( error, errorInfo ) {\n\t\tthis.setState( { hasError: true } );\n\t}\n\n\trender() {\n\t\tif ( this.state.hasError ) {\n\t\t\treturn <h1>Ooooops. Something went wrong :(</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n}\n\nexport default ErrorBoundry;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\n// import { kitties } from './kitties';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nimport { setSearchField, requestKitties } from \"../actions\";\n\n/*import mapStateToProps\n\tfrom \"react-redux/es/connect/mapStateToProps\";\nimport mapDispatchToProps\n\tfrom \"react-redux/es/connect/mapDispatchToProps\";*/\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchKitties.searchField,\n\t\tkitties: state.requestKitties.kitties,\n\t\tisPending: state.requestKitties.isPending,\n\t\terror: state.requestKitties.error\n\t}\n};\n\nconst mapDispatchToProps = ( dispatch ) => {\n\treturn {\n\t\tonSearchChange: ( event ) => dispatch( setSearchField( event.target.value ) ),\n\t\tonRequestKitties: () => dispatch( requestKitties() ) // requestKitties( dispatch )\n\t}\n};\n\nclass App extends Component {\n/*\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tkitties: []\n\t\t\t// searchfield: ''\n\t\t}\n\t}\n*/\n\n\tcomponentDidMount() {\n\t\t// console.log( this.props.store.getState() );\n\t\t// this.setState( { kitties: kitties } );\n\t\t// console.log( this.state );\n\n\t\t// fetch( 'https://jsonplaceholder.typicode.com/users' )\n\t\t// \t.then( response => response.json() )\n\t\t// \t.then( users => this.setState( { kitties: users } ) )\n\n\t\tthis.props.onRequestKitties();\n\t}\n\n/*\n\tonSearchChange = ( event ) => {\n\t\tthis.setState( { searchfield: event.target.value } );\n\t};\n*/\n\n\trender() {\n\t\t// const { kitties } = this.state;\n\t\tconst { searchField, onSearchChange, kitties, isPending } = this.props;\n\t\tconst filteredKitties = kitties.filter( kitty => {\n\t\t\treturn kitty.name.toLowerCase().includes( searchField.toLowerCase() );\n\t\t});\n\t\treturn isPending ?\n\t\t\t<h1 className={'tc'}>Loading...</h1> :\n\t\t(\n\t\t\t<div className={'tc'}>\n\t\t\t\t<h1 className={'f1'}>Kitty friends</h1>\n\t\t\t\t<SearchBox searchChange={ onSearchChange } />\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList kitties={ filteredKitties } />\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )( App );\n","import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_KITTIES_PENDING,\n\tREQUEST_KITTIES_SUCCESS,\n\tREQUEST_KITTIES_FAILED\n} from './constants';\n\nexport const setSearchField = ( text ) => ({\n\ttype: CHANGE_SEARCH_FIELD,\n\tpayload: text\n});\n\nexport const requestKitties = () => ( dispatch ) => {\n\tdispatch( { type: REQUEST_KITTIES_PENDING } );\n\tfetch( 'https://jsonplaceholder.typicode.com/users' )\n\t\t.then( response => response.json() )\n\t\t.then( data => dispatch( { type: REQUEST_KITTIES_SUCCESS, payload: data } ) )\n\t\t.catch( error => dispatch( { type: REQUEST_KITTIES_FAILED, payload: error } ) );\n};\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_KITTIES_PENDING = 'REQUEST_KITTIES_PENDING';\nexport const REQUEST_KITTIES_SUCCESS = 'REQUEST_KITTIES_SUCCESS';\nexport const REQUEST_KITTIES_FAILED = 'REQUEST_KITTIES_FAILED';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_KITTIES_PENDING,\n\tREQUEST_KITTIES_SUCCESS,\n\tREQUEST_KITTIES_FAILED\n} from './constants';\n\nconst initialStateSearch = {\n\tsearchField: ''\n};\n\nexport const searchKitties = ( state = initialStateSearch, action = {} ) => {\n\tswitch ( action.type ) {\n\t\tcase CHANGE_SEARCH_FIELD :\n\t\t\treturn Object.assign( {}, state, { searchField: action.payload } );\n\t\tdefault :\n\t\t\treturn state;\n\t}\n};\n\nconst initialStateKitties = {\n\tisPending: false,\n\tkitties: [],\n\terror: ''\n};\n\nexport const requestKitties =  ( state = initialStateKitties, action = {} ) => {\n\tswitch ( action.type ) {\n\t\tcase REQUEST_KITTIES_PENDING :\n\t\t\treturn Object.assign( {}, state, { isPending: true } );\n\t\tcase REQUEST_KITTIES_SUCCESS :\n\t\t\treturn Object.assign( {}, state, { kitties: action.payload, isPending: false } );\n\t\tcase REQUEST_KITTIES_FAILED :\n\t\t\treturn Object.assign( {}, state, { error: action.payload, isPending: false } );\n\t\tdefault :\n\t\t\treturn state;\n\t}\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { searchKitties, requestKitties } from \"./reducers\";\nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers( { searchKitties, requestKitties } );\nconst store = createStore( rootReducer, applyMiddleware( thunkMiddleware, logger ) );\n\nReactDOM.render(\n\t\t<Provider store={ store }>\n\t\t\t<App />\n\t\t</Provider>, document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}